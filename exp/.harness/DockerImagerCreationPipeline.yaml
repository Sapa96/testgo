pipeline:
  name: DockerImagerCreationPipeline
  identifier: DockerImagerCreationPipeline
  projectIdentifier: RajathaTest2
  orgIdentifier: default
  tags: {}
  properties:
    ci:
      codebase:
        connectorRef: githubrajatha
        build: <+input>
  stages:
    - stage:
        name: build
        identifier: build
        type: CI
        spec:
          cloneCodebase: true
          execution:
            steps:
              - step:
                  type: Run
                  name: run
                  identifier: run
                  spec:
                    connectorRef: dockerrajatha
                    image: alpine:latest
                    shell: Sh
                    command: |-
                      touch harnessDockerfileui
                      cat > harnessDockerfileui <<- EOM
                      FROM alpine:latest AS dev-env
                      ARG foo
                      RUN echo "$foo bar"
                      ENTRYPOINT ["pwd"]

                      FROM alpine:latest AS release-env
                      ARG hello
                      RUN echo "$hello world"
                      ENTRYPOINT ["ls"]
                      EOM
                      cat harnessDockerfileui
                    reports:
                      type: JUnit
                      spec:
                        paths:
                          - "*.xml"
                    outputVariables:
                      - name: LATEST_BRANCH
              - step:
                  type: BuildAndPushDockerRegistry
                  name: build and push
                  identifier: build_and_push
                  spec:
                    connectorRef: dockerrajatha
                    repo: rajatharanganath/ciquickstart
                    tags:
                      - <+repeat.item>
                    dockerfile: harnessDockerfileui
                  failureStrategies: []
                  strategy:
                    repeat:
                      items:
                        - abc
                        - efg
                        - hij
                    maxConcurrency: 2
          infrastructure:
            type: KubernetesDirect
            spec:
              connectorRef: rajathak8
              namespace: rajatha-delegate-april
              nodeSelector: {}
              os: Linux
